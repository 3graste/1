from fastapi import FastAPI, Path, HTTPException
from pydantic import BaseModel

app = FastAPI()

class User(BaseModel):
    id: int
    username: str
    age: int

users = []

@app.get("/users")
async def get_users() -> list[User ]:
    return users

@app.post("/user/{username}/{age}")
async def create_user(username: str = Path(min_length=5, max_length=20, description='Enter username', example="UrbanUser "),
                      age: int = Path(ge=18, le=120, description='Enter age', example=24)) -> User:
    user_id = len(users) + 1
    user = User(id=user_id, username=username, age=age)
    users.append(user)
    return user

@app.put("/user/{user_id}/{username}/{age}")
async def update_user(user_id: int = Path(description='Enter user ID', example=1),
                      username: str = Path(min_length=5, max_length=20, description='Enter username', example="UrbanProfi"),
                      age: int = Path(ge=18, le=120, description='Enter age', example=28)) -> User:
    for user in users:
        if user.id == user_id:
            user.username = username
            user.age = age
            return user
    raise HTTPException(status_code=404, detail="User  was not found")

@app.delete("/user/{user_id}")
async def delete_user(user_id: int = Path(description='Enter user ID', example=1)) -> str:
    for user in users:
        if user.id == user_id:
            users.remove(user)
            return f"User  {user_id} has been deleted"
    raise HTTPException(status_code=404, detail="User  was not found")
